{{> table-modifiers}}

<form id="modify-modal" class="modal">
  <div class="modal-background"></div>

  <div class="modal-content box">
    <div class="field">
      <label class="label">Tên</label>
      <div class="control">
        <input id="modify-modal-name" name="name" class="input" type="text" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Giới tính</label>
      <div class="control">
        <div class="select">
          <select id="modify-modal-gender" name="gender" required>
            <option>Nam</option>
            <option>Nữ</option>
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label">Năm sinh</label>
      <div class="control">
        <input id="modify-modal-year-of-birth" , name="yearOfBirth" class="input" type="number" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Địa chỉ</label>
      <div class="control">
        <input id="modify-modal-address" name="address" class="input" type="text">
      </div>
    </div>

    <div class="field is-grouped">
      <div class="control">
        <button id="modify-modal-confirm" class="button is-link">Cập nhập</button>
      </div>
      <div class="control">
        <button id="modify-modal-close" class="button is-link is-light" type="button">Hủy bỏ</button>
      </div>
    </div>
  </div>
</form>
<script>
  const TABLE_COLUMNS = [
    { title: "id", field: "id", visible: false },
    { title: "STT", field: "STT", formatter: "rownum", width: 100 },
    { title: "Tên", field: "name", sorter: "string" },
    { title: "Giới tính", field: "gender", sorter: "string" },
    { title: "Năm sinh", field: "yearOfBirth", sorter: "number", width: 150 },
    { title: "Địa chỉ", field: "address", sorter: "string" },
  ];

  const DATA_URL = "/api/fake/patient";

  const formModal = $("#modify-modal");
  const nameModifyModalInput = $("#modify-modal-name");
  const genderModifyModalInput = $("#modify-modal-gender");
  const yearOfBirthModifyModalInput = $("#modify-modal-year-of-birth");
  const addressModifyModalInput = $("#modify-modal-address");


  const onCreateButtonClicked = () => { formModal.classList.add("is-active"); }
  const onConfirmModalConfirmButtonClicked =(table)=>
  { 
    fetch('/patient/delete', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(table.getSelectedData()),
          })
          .then(response => {
            response.json()
          })
          .then(data => {
            console.log('Success:', data);
          })
          .catch((error) => {
          console.error('Error:', error);
        });
    table.deleteRow(
      table.getSelectedData().map(function (r) { return r.id; })
    );
    
  }
  const onModifyButtonClicked = row => {
    nameModifyModalInput.value = row.name;
    yearOfBirthModifyModalInput.value = row.yearOfBirth;
    addressModifyModalInput.value = row.address;
  };

  $("#modify-modal-close").onclick = function () { 
    nameModifyModalInput.classList.remove("is-danger");
    addressModifyModalInput.classList.remove("is-danger");
    formModal.classList.remove("is-active"); 
  };
  $("#modify-modal-confirm").onclick = function (e) {

    const name = nameModifyModalInput.value;
    const gender = genderModifyModalInput.value;
    const yearOfBirth = yearOfBirthModifyModalInput.value;
    const address = addressModifyModalInput.value;
    const hasError = false;
      const patient={
        name: name,
        gender: gender,
        yearOfBirth: yearOfBirth,
        address: address,
      }

    if (name.length === 0) {
      nameModifyModalInput.classList.add("is-danger");
      hasError = true;
    }
    else
    {
      nameModifyModalInput.classList.remove("is-danger");

    }
    if (yearOfBirth.length === 0) {
      addressModifyModalInput.classList.add("is-danger");
      hasError = true;
    }
    else
    {
      addressModifyModalInput.classList.remove("is-danger");

    }
    
    if (hasError) {
      return;
    }

    if (isCreate) {
      table.addData([{ id: Math.round(Math.random() * 10000), name, gender, yearOfBirth, address }], true);
      fetch('/patient/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(patient),
          })
          .then(response => {
            response.json()
          })
          .then(data => {
            console.log('Success:', data);
          })
          .catch((error) => {
          console.error('Error:', error);
        });
        table.setData(DATA_URL);
    } else {
      table.updateData([{ id: table.getSelectedData()[0].id, name, gender, yearOfBirth, address }]);
      patient.id=table.getSelectedData()[0].id
      fetch('/patient/edit/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        
        body: JSON.stringify(patient),

        })
        .then(response => {
          response.json()
        })
        .then(data => {
          console.log('Success:', data);
        })
        .catch((error) => {
        console.error('Error:', error);
      });
    }

    formModal.classList.remove("is-active");
    table.deselectRow();
    formModal.reset()
  }

</script>

{{> table-modifiers-script}}