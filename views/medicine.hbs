<div class="m-2">
  <button class="button" id="load-data-button">Tải dữ liệu</button>
  <button class="button" id="select-all-button">Chọn tất cả</button>
  <button class="button" id="deselect-all-button">Bỏ chọn tất cả</button>
  <button class="button is-primary" id="create-button">Thêm</button>
  <button class="button is-info" id="modify-button" disabled>Cập nhật</button>
  <button class="button is-danger" id="delete-button">Xóa</button>
  <input class="input is-primary" id="filter-input" type="text" placeholder="Nhập tên cần lọc" style="width: 500px;">
</div>
<div id="table"></div>

<form id="modify-modal" class="modal">
  <div class="modal-background"></div>

  <div class="modal-content box">
    <div class="field">
      <label class="label">Tên</label>
      <div class="control">
        <input id="modify-modal-name" name="name" class="input" type="text" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Đơn vị</label>
      <div class="control">
        <div class="select">
          <select id="modify-modal-unit" name="unit" required>
            {{#each units}}
            <option>{{this}}</option>
            {{/each}}
          </select>
        </div>
      </div>
    </div>

    <div class="field">
      <label class="label">Giá</label>
      <div class="control">
        <input id="modify-modal-price" , name="price" class="input" type="number" required>
      </div>
    </div>

    <div class="field">
      <label class="label">Cách dùng</label>
      <div class="control">
        <div class="select">
          <select id="modify-modal-user-manual" name="unit" required>
            {{#each userManuals}}
            <option>{{this}}</option>
            {{/each}}
          </select>
        </div>
      </div>
    </div>

    <div class="field is-grouped">
      <div class="control">
        <button id="modify-modal-confirm" class="button is-link" type="button">Cập nhập</button>
      </div>
      <div class="control">
        <button id="modify-modal-close" class="button is-link is-light" type="button">Hủy bỏ</button>
      </div>
    </div>
  </div>
</form>

<form id="delete-modal" class="modal">
  <div class="modal-background"></div>
  <div class="modal-content box">
    <p class="is-size-4 has-text-centered has-text-weight-bold pb-3">Bạn có chắc muốn xóa?</p>
    <div class="field is-grouped columns is-justify-content-center py-4">
      <div class="control">
        <button id="delete-modal-confirm" class="button column is-link is-inline-flex" type="button">Xác
          nhận</button>
      </div>
      <div class="control">
        <button id="delete-modal-close" class="button column is-link is-light is-inline-flex" type="button">Hủy
          bỏ</button>
      </div>
    </div>
  </div>
</form>


<script>
  const table = new Tabulator("#table", {
    ...tabulatorConfig,
    columns: [
      { title: "id", field: "id", visible: false },
      { title: "STT", field: "STT", formatter: "rownum", width: 100 },
      { title: "Tên", field: "name", sorter: "string" },
      { title: "Đơn vị", field: "unit", sorter: "string" },
      { title: "Giá", field: "price", sorter: "number", width: 150 },
      { title: "Cách dùng", field: "userManual", sorter: "string" },
    ],
  });

  $("#load-data-button").onclick = function () { table.setData("/api/fake/medicine"); };
  $("#select-all-button").onclick = function () { table.selectRow(); };
  $("#deselect-all-button").onclick = function () { table.deselectRow(); }

  const modifyButton = $("#modify-button");
  const deleteButton = $("#delete-button");
  let isCreate = false;

  const formModal = $("#modify-modal");
  const nameModifyModalInput = $("#modify-modal-name");

  const deleteFormModal = $("#delete-modal");

  table.on("rowSelectionChanged", function (data, rows) {
    modifyButton.disabled = data.length !== 1;
    deleteButton.disabled = data.length === 0;
  });

  $("#create-button").onclick = function () {
    isCreate = true;
    formModal.classList.add("is-active");
  };

  modifyButton.onclick = function () {
    isCreate = false;
    const row = table.getSelectedData()[0];
    nameModifyModalInput.value = row.name;
    formModal.classList.add("is-active");
  };

  deleteButton.onclick = function () { deleteFormModal.classList.add("is-active"); };

  $("#filter-input").onchange = function (e) {
    table.setFilter("name", "like", e.target.value);
  };

  $("#modify-modal-close").onclick = function () { formModal.classList.remove("is-active"); };
  $("#modify-modal-confirm").onclick = function (e) {
    e.preventDefault();
    
    const name = nameModifyModalInput.value;
    const hasError = false;

    if (name.length === 0) {
      nameModifyModalInput.classList.add("is-danger");
      hasError = true;
    }
    if (hasError) {
      return;
    }

    if (isCreate) {
      table.addData([ {id: Math.round(Math.random() * 10000), name, gender, yearOfBirth, address} ], true);
    } else {
      table.updateData([{ id: table.getSelectedData()[0].id, name, gender, yearOfBirth, address }]);
    }

    formModal.classList.remove("is-active");
    table.deselectRow();
  }

  $("#delete-modal-close").onclick = function () { deleteFormModal.classList.remove("is-active") }
  $("#delete-modal-confirm").onclick = function () {
    table.deleteRow(table.getSelectedData().map(function (r) { return r.id; }));
    deleteFormModal.classList.remove("is-active");
    table.deselectRow();
  }
</script>